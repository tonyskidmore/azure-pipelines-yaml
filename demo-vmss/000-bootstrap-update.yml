---

name: "bootstrap"

parameters:
- name: operation
  displayName: Bootstrap Operation
  type: string
  default: terraform-plan-apply
  values:
  - first-time-only
  - terraform-plan-apply
  - terraform-destroy

trigger: none

variables:
- group: build
# - name: containerImage
#   value: "ghcr.io/tonyskidmore/azdo-container-image:latest"

pool:
  name: 'vmss-bootstrap-pool'


# resources:
#   containers:
#     - container: ubuntu20_04
#       image: '${{ variables.containerImage }}'

stages:
# - ${{ if eq(parameters.operation, 'first-time-only') }}:
- stage: update
  condition: eq('${{ parameters.operation }}', 'first-time-only')

  jobs:
    - job: update
      displayName: "Update Terraform Code"
      continueOnError: false
      # container: ubuntu20_04

      steps:

        # - checkout: self
        # - checkout: git://$(project)/module

        - script: |
            env
            ls "$SYSTEM_DEFAULTWORKINGDIRECTORY"
          displayName: Debug

- template: ../terraform/terraform.yml
  parameters:
    # container: ubuntu20_04
    initCheckout:
      - self
      - git://$(project)/module
    dependsOn:
      - update
    poolName: 'vmss-bootstrap-pool'
    terraformDirectory: '$(System.DefaultWorkingDirectory)/module/demo_environment'
    terraformTfVars:
      TF_VAR_ado_ext_pat: $(ado_ext_pat)
