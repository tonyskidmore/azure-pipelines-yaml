---

parameters:
  - name: azureSubscription
    type: string
  - name: environmentName
    type: string
  - name: terraformDirectory
    type: string
  - name: terraformTfVars
    type: object
  - name: preApplySteps
    type: stepList
    default: []

steps:

  - checkout: none

  - task: Cache@2
    displayName: 'Get Terraform cache'
    inputs:
      key: 'terraform | plan | ${{ parameters.environmentName }} | "$(Agent.OS)" | "$(Build.BuildId)" | "$(Build.SourceVersion)"'

  - script: |
      env
      ls "$SYSTEM_DEFAULTWORKINGDIRECTORY"
    displayName: Debug plan
    env:
      ${{ parameters.terraformTfVars}}

  - task: AzureCLI@2
    inputs:
      azureSubscription: '${{ parameters.azureSubscription }}'
      scriptType: 'bash'
      scriptPath: '$(System.DefaultWorkingDirectory)/pipelines/terraform/scripts/terraform-auth.sh'
      arguments: '${{ parameters.terraformDirectory }}'
      workingDirectory: '${{ parameters.terraformDirectory }}'
      addSpnToEnvironment: true
    displayName: 'Terraform authentication'
    condition: gt(length('${{ parameters.azureSubscription }}'), 0)
    env:
      ${{ parameters.terraformTfVars}}

  - ${{ each step in parameters.preDestroySteps }}:
    - ${{ each pair in step }}:
          ${{ pair.key }}: ${{ pair.value }}

  - task: AzureCLI@2
    inputs:
      azureSubscription: '${{ parameters.azureSubscription }}'
      scriptType: 'bash'
      scriptPath: '$(System.DefaultWorkingDirectory)/pipelines/terraform/scripts/terraform-apply.sh'
      arguments: '${{ parameters.terraformDirectory }}'
      workingDirectory: '${{ parameters.terraformDirectory }}'
      addSpnToEnvironment: true
    displayName: 'Run terraform apply'
    env:
      ${{ parameters.terraformTfVars}}
